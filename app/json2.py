
p = {
'1' : 'C++ comes with libraries which provides us many ways for performing input and output. In C++ input and output is performed in the form of sequence of bytes or more commonly known as streams.',
'2' : 'Input Stream:',
'3' : 'If the direction of flow of bytes is from device(for example: Keyboard) to the main memory then this process is called input.',
'4' : 'Output Stream:',
'5' : 'If the direction of flow of bytes is opposite, i.e. from main memory to device( display screen ) then this process is called output.',
'6' : 'Header files available in C++ for Input – Output operation are:',
'7' : 'iostream: iostream stands for standard input output stream. This header file contains definitions to objects like cin, cout, cerr etc.',
'8' : 'iomanip: iomanip stands for input output manipulators. The methods declared in this files are used for manipulating streams. This file contains definitions of setw, setprecision etc.',
'9' : 'fstream: This header file mainly describes the file stream. This header file is used to handle the data being read from a file as input or data being written into the file as output.',
'10' : 'In C++ articles, these two keywords cout and cin  are used very often for taking inputs and printing outputs. These two are the most basic methods of taking input and output in C++. For using cin and cout we must include the header file iostream in our program.',
'11' : 'In this article we will mainly discuss about the objects defined in the header file iostream like cin and cout.',
'12' : 'Standard output stream (cout): Usually the standard output device is the display screen. cout is the instance of the ostream class. cout is used to produce output on the standard output device which is usually the display screen. The data needed to be displayed on the screen is inserted in the standard output stream (cout) using the insertion operator (<<).',
'13' : '#include <iostream>',
'14' : 'using namespace std;',
'15' : 'int main() {',
'16' : 'char sample[] = "Thoughtcode";',
'17' : 'cout << sample << " - A Computer Science portal";',
'18' : 'return 0;}',
'19' : ' Output:',
'20' : 'Thoughtcode - A Computer Science portal',
'21' : ' As you can see in the above program the insertion operator(<<) insert the value of the string variable sample followed by the string “A computer science portal for geeks” in the standard output stream cout which is then displayed on screen.',
'22' : 'standard input stream (cin): Usually the input device is the keyboard. cin is the instance of the class istream and is used to read input from the standard input device which is usually keyboard.',
'23' : 'The extraction operator(>>) is used along with the object cin for reading inputs. The extraction operator extracts the data from the object cin which is entered using the keboard.',
'24' : '#include <iostream>',
'25' : 'using namespace std;',
'26' : 'int main() {',
'27' : 'int age;',
'28' : 'cout << "Enter age:";',
'29' : 'cin >> age;',
'30' : ' cout << "\nYour age is: "<<age;',
'31' : 'return 0; }',
'32' : 'Input:18',
'33' : 'Output:',
'34' : 'Enter your age:',
'35' : 'Your age is: 18',
'36' : ' The above program asks the user to input the age. The object cin is connected to the input device. The age entered by the user is extracted from cin using the extraction operator(>>) and the extracted data is then stored in the variable age present on the right side of the extraction operator.',
'37' : 'Un-buffered standard error stream (cerr): cerr is the standard error stream which is used to output the errors. This is also an instance of the ostream class. As cerr is un-buffered so it is used when we need to display the error message immediately. It does not have any buffer to store the error message and display later. ',
'38' : '#include <iostream>',
'39' : 'using namespace std;',
'40' : 'int main() {',
'41' : ' cerr<<"An error occured";',
'42' : 'return 0; }',
'43' : 'Output:',
'44' : 'An error occured',
'45' : 'buffered standard error stream (clog): This is also an instance of ostream class and used to display errors but unlike cerr the error is first inserted into a buffer and is stored in the buffer until it is not fully filled. The error message will be displayed on the screen too.',
'46' : '#include <iostream>',
'47' : ' using namespace std;',
'48' : 'int main( ) {',
'49' : 'clog << "An error occured"; ',
'50' : 'return 0; }',
'51' : ' output:',
'52' : 'An error occured'

}


import json
s = json.dumps(p)
with open ("Z://my project//json_files//book2.txt","w") as f:
    f.write(s)
